---
  import {
    eachWeekOfInterval,
    addDays,
    formatISO,
    setDate,
    subDays,
    addMonths,
    startOfDay,
    isThisMonth,
  } from "date-fns";
  import { format } from "src/utils";

  const {monthOf, events} = Astro.props;
  
  const firstDay = setDate(monthOf, 1);
  const lastDay = subDays(addMonths(firstDay, 1), 1);
  const weeks = eachWeekOfInterval(
    { start: firstDay, end: lastDay },
    { weekStartsOn: 0 }
  );
  const days = weeks.map((firstDay) =>
    Array.from({ length: 7 }, (_, i) => addDays(firstDay, i))
  );
  let byDay = events.reduce((acc: { [key: string]: Date[] }, event: Date) => {
    const day = startOfDay(event).toISOString();
    acc[day] = [...(acc[day] || []), event];
    return acc;
  }, {});

---
<table>

<script >
  import {isToday } from 'date-fns';
  // Mark today
    const times = document.querySelectorAll("td time");
    for (const t of times) {
      if(!isToday(new Date(t.getAttribute("datetime")))) continue;
      const td = t.closest("td");
      td.classList.add("today");
      break;
    }
</script>

  <thead>
    <tr>
      <th>Sun</th>
      <th>Mon</th>
      <th>Tue</th>
      <th>Wed</th>
      <th>Thu</th>
      <th>Fri</th>
      <th>Sat</th>
    </tr>
  </thead><tbody>
    { days.map( week => (
      <tr>
        { week.map( day => (
          <td class={ isThisMonth(day) ? 'inMonth' : ''}>
            { byDay[day.toISOString()] ? (
              <a href={format(day, "#dd")}>
                <time datetime={formatISO(day)}>{format(day, "d")}</time>
              </a>
              <div class='events'>
                {byDay[day.toISOString()].slice(0, 6).map( (_: any) => (<div />))}
                </div>
            ) : (
              <time datetime={formatISO(day)}>{format(day, "d")}</time>
            )}
          </td>
        ))}  
      </tr>
    ))}
  </tbody>

</table>

<style>
  table {
    width: 300px;
    table-layout: fixed;
  }

  td,
  th {
    user-select: none;
    text-align: center;
    padding: 0.3rem 0 .5rem;
    position: relative;
    z-index: 2;
  }

  th {
    border-bottom: 0;
    background-color: var(--color);
    color: var(--background);
    padding-bottom: 0.3rem;
  }

  td:not(.inMonth) {
    opacity: 0.5;
  }

  .today {
    border-color: var(--primary);
  }

  .events > div {
    position: relative;
    width: 0.2rem;
    height: 0.2rem;
    background: var(--primary);
    padding: 0;
    margin: 0;
  }

  .events {
    position: absolute;
    display: flex;
    bottom: 0.1rem;
    gap: 0.2rem;
    width: 100%;
    padding: 0;
    height: 0.2rem;
    margin: 0;
  }

  td a {
    display: block;
    width: 100%;
    height: 100%;
  }
</style>
