---
  import { DateTime } from 'luxon';
  import cfg from 'src/config';
  interface Props {
    monthOf: DateTime;
    events: Date[];
  }

  const {monthOf, events} = Astro.props;

  monthOf.setZone(cfg.TIMEZONE);

  const firstDay = monthOf.startOf('month');
  const lastDay = monthOf.endOf('month');
  
  const weeks = [];

  for( let i = firstDay.weekNumber; i <= lastDay.weekNumber; i++) {
    weeks.push(
      Array.from({length: 7}, (_, j) => monthOf.set({weekNumber: i, weekday: j}))
    );
  }
  
  const byDay = new Map<number, DateTime[]>();
  for(let event of events) {
    const datetime = DateTime.fromJSDate(event, {zone: cfg.TIMEZONE});
    const {day} = datetime
    byDay.set(day, [...(byDay.get(day) || []), datetime]);
  }
---
<table>

<script >
  import { DateTime } from 'luxon';
  import cfg from 'src/config';
  // Mark today
  const times = document.querySelectorAll("td time");
  const today = DateTime.now().setZone(cfg.TIMEZONE);
  for (const t of times) {
    const day = DateTime.fromISO(t.getAttribute("datetime"));
    if(!today.hasSame(day, 'day')) continue;

    t.closest("td").classList.add("today");
    if(t.parentElement.tagName === 'A') break;

    // Ensure the entry for today has a link
    const a = document.createElement("a");
    a.href = "#" + today.toFormat("dd");
    a.append(t.cloneNode(true));
    t.replaceWith(a);

    break;
  }
</script>

  <thead>
    <tr>
      <th>Sun</th>
      <th>Mon</th>
      <th>Tue</th>
      <th>Wed</th>
      <th>Thu</th>
      <th>Fri</th>
      <th>Sat</th>
    </tr>
  </thead><tbody>
    { weeks.map( week => (
      <tr>
        { week.map( day => (
          <td class={ day.month === monthOf.month ? 'inMonth' : ''}>
           { day.month === monthOf.month && byDay.get(day.day) ? (
              <a href={'#'+ day.toFormat('dd')}>
                <time datetime={day.toISO()}>{day.day}</time>
              </a>
              <div class='events'>
                {byDay.get(day.day)?.slice(0, 6).map( (_: any) => (<div />))}
                </div>
            ) : (
              <time datetime={day.toISO()}>{day.day}</time>
            )} 
          </td>
        ))}  
      </tr>
    ))}
  </tbody>

</table>

<style is:global>
  @media (prefers-color-scheme: light) {
    .today {
      border-color: white;
    }
  }
</style>
<style>
  table {
    width: 300px;
    table-layout: fixed;
  }

  td,
  th {
    user-select: none;
    text-align: center;
    padding: 0.3rem 0 .5rem;
    position: relative;
    z-index: 2;
  }

  th {
    border-bottom: 0;
    background-color: var(--color);
    color: var(--background);
    padding-bottom: 0.3rem;
  }

  td:not(.inMonth) {
    opacity: 0.5;
  }

  .today {
    border-color: var(--primary);
  }

  .events > div {
    position: relative;
    width: 0.2rem;
    height: 0.2rem;
    background: var(--primary);
    padding: 0;
    margin: 0;
  }

  .events {
    position: absolute;
    display: flex;
    bottom: 0.1rem;
    gap: 0.2rem;
    width: 100%;
    padding: 0;
    height: 0.2rem;
    margin: 0;
  }

  td a {
    display: block;
    width: 100%;
    height: 100%;
  }

  @media (prefers-color-scheme: light) {
    th {
      color: white;
    }

    td {
      color: black;
      font-weight: bolder;
      border-color: currentColor;
    }

    .events > div {
      background-color: white;
    }
  }
</style>
